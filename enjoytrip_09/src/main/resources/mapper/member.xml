<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.ssafy.enjoytrip.member.model.mapper.MemberMapper">

	<resultMap type="memberDto" id="member">
		<result column="user_id" property="userId"/>
		<result column="user_name" property="userName"/>
		<result column="user_password" property="userPass"/>
		<result column="user_nickname" property="userNickname"/>
		<result column="user_email" property="userEmail"/>
		<result column="user_domain" property="userDomain"/>
		<result column="token" property="refreshToken"/>
	</resultMap>
	
	<parameterMap type="memberDto" id="member" />
	
	<select id="loginMember" parameterType="string" resultMap="member">
		select user_id, user_name, token
		from trip_member
		where user_id = #{userId} and user_password = #{userPass} 
	</select>
	
	<update id="updateMember" parameterType="memberDto">
		update trip_member
		set user_id = #{userId}, user_password = #{userPass}, user_name = #{userName}, user_nickname = #{userNickname}, user_email = #{userEmail}, user_domain = #{userDomain}
		where user_id = #{userId}
	</update>

	<insert id="joinMember" parameterType="memberDto">
		insert into trip_member (user_id, user_name, user_nickname, user_password, user_email, user_domain)
		values (#{userId}, #{userName}, #{userNickname}, #{userPass}, #{userEmail}, #{userDomain})
	</insert>
	
	<delete id="delete" parameterType="string">
		delete from trip_member
		where user_id = #{userId}
	</delete>
	
	<select id="getMyInfo" parameterType="string" resultMap="member">
		select user_id, user_password, user_name, user_nickname, user_email, user_domain
		from trip_member
		where user_id = #{userId}
	</select>
	
	<select id="findId" parameterMap="member" resultType="string">
		select user_id
		from trip_member
		where user_email = #{userEmail} and user_domain = #{userDomain}
	</select>
	
	<select id="findPwd" parameterType="string" resultType="string">
		select user_password
		from trip_member
		where user_id = #{userId}
	</select>
	
	<!-- JWT 토큰 -->
	
	<update id="saveRefreshToken" parameterType="map">
		update trip_member
		set token = #{token}
		where user_id = #{userId}
	</update>
	
	<select id="getRefreshToken" parameterType="string" resultType="string">
		select token
		from trip_member
		where user_id = #{userId}
	</select>
	
	<update id="deleteRefreshToken" parameterType="map">
		update trip_member
		set token = #{token, jdbcType=VARCHAR}
		where user_id = #{userId}
	</update>
	
	<!-- 마이 페이지 -->
	
	<insert id="addBookmark" parameterType="string">
		insert into bookmark (plan_id, user_id)
		values (#{planId}, #{userId})
	</insert>
	
	<select id="getBookmark" parameterType="string" resultType="map">
		select user_id userId, plan_id planId, plan_title planTitle, update_time UpdateTime
		from plan_list
		where user_id = #{userId}
	</select>
	
	<delete id="deleteBookmark" parameterType="string">
		delete from bookmark
		where user_id = #{userId} AND plan_id = #{planId}
	</delete>
	
	<select id="getBookmarkDetail" parameterType="string" resultType="map">
		select a.content_id contentId, content_type_id contentTypeId, title, addr1 addr, first_image image, latitude, longitude, plan_id planId, plan_date planDate, plan_seq planSeq
		from attraction_info a join (
				select plan_id, plan_date, plan_seq, content_id
				from plan_seq
				where plan_id = #{planId}) p
			on a.content_id = p.content_id
	</select>
	
</mapper>